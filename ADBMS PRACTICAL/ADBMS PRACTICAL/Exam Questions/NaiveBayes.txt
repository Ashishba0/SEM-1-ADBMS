library(caret)

# Load the iris dataset
data(iris)

# Split the data into training and testing sets
set.seed(42)
split <- createDataPartition(iris$Species, p = 0.8, list = FALSE)
train <- iris[split, ]
test <- iris[-split, ]

# Train a Naive Bayes model on the training set
model <- train(Species ~ ., data = train, method = "nb")

# Make predictions on the test set
predictions <- predict(model, test)

# Evaluate the model's accuracy
accuracy <- confusionMatrix(predictions, test$Species)$overall["Accuracy"]
cat("Model accuracy:", accuracy)


//THEORY
In this code, we first load the iris dataset from the caret package. 
We then use the createDataPartition function to split the data into training and testing sets. 
We set the p parameter to 0.8 to indicate that we want 80% of the data to be used for training, 
and set list to FALSE to return a vector of indices for the training set.

Next, we train a Naive Bayes model using the train function from the caret package.
We specify Species ~ . to indicate that we want to predict the Species column using all other columns as features, 
and set method to "nb" to use the Naive Bayes algorithm.

Finally, we make predictions on the test set using the predict function, and evaluate the accuracy of the model using the confusionMatrix function from the caret package. 
The confusionMatrix function returns a confusion matrix, and we use the $overall method to extract the accuracy value.




